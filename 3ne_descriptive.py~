#name entity recognition
# who we are taking about
#printing name entity
#printing features of that name entity i.e. good or bad or best
import nltk
import re
import time

sampleArray = ['Food qualtity is average.','Staff member of this Hotel is nice','Really enjoyed staying at the park plaza for 3 weeks.']

def processLanguage():

    try:
        for item in sampleArray:
            tokenized = nltk.word_tokenize(item)
            tagged = nltk.pos_tag(tokenized)
            print "sentence 	:	",item
            print "tagged	:	",tagged
            nameEnt = nltk.ne_chunk(tagged,binary=True)#if binary is not true then it will show GPE entity
            #print "nameEnt	:	",nameEnt
            nameEnt.draw()#drawing name entity
            entities = re.findall(r'NE\s(.*?)/',str(nameEnt))#extracting name entity from nameEnt
            print "name entity	:	",entities#printing name entity

            # ('nice', 'JJ')
            descriptives = re.findall(r'\(\'(\w*)\',\s\'JJ\w?\'',str(tagged))# extracting nice from above tagged version of token i.e. input : ('nice', 'JJ') output : nice , or ('worst', 'JJS') output : worst
            print "descritive word	:	",descriptives

            time.sleep(1)

    except Exception as e:
        print str(e)
processLanguage()
